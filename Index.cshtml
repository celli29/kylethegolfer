@*@model IEnumerable<GolfWorld1.Models.Course>*@
@model PagedList.IPagedList<GolfWorld1.Models.Course>
@using GolfWorld1.Util
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
    
    string currentFilter = ViewBag.CurrentFilter;
    string currentSort = ViewBag.CurrentSort;
    if (string.IsNullOrEmpty(currentSort))
    {
        currentSort = "date_desc";
    }    
}

<h2>List of Golf Courses:</h2>
<p>You can search or view the golf course where you want to play. If you can't find the golf course,
    you may ask us to create a golf course with a scorecard.</p>

@if (@User.IsInRole("Admin"))
{
    <p>
        @Html.ActionLink("Create New", "CreateCourse")
    </p>
}

@using (Html.BeginForm("Index", "Course", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Address", "Index", new { sortOrder = ViewBag.AddressSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("City", "Index", new { sortOrder = ViewBag.CitySortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("State", "Index", new { sortOrder = ViewBag.StateSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Pars", "Index", new { sortOrder = ViewBag.ParsSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("URL", "Index", new { sortOrder = ViewBag.UrlSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Pars)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.URL)
            </td>
            <td>
                @if (@User.IsInRole("Admin"))
                {
                    @Html.ActionLink("Edit", "EditCourse", new {id = item.GCID}) <text>|</text>
                    @Html.ActionLink("Details", "DetailsCourse", new {id = item.GCID}) <text>|</text>
                    @Html.ActionLink("Delete", "Delete", new {id = item.GCID}) <text>|</text>
                    @Html.ActionLink("New ScoreCard", "CreateTees", new {id = item.GCID}) <text>|</text>
                    @Html.ActionLink("View ScoreCard", "DetailsScoreCard", new {id = item.GCID}) <text>|</text>
                    @Html.ActionLink("Edit ScoreCard", "EditScoreCard", new {id = item.GCID}) <text>|</text>
                    @Html.ActionLink("View Map", "ViewMap", new { id = item.GCID })
                }
                else
                {
                    @Html.ActionLink("Details", "DetailsCourse", new {id = item.GCID}) <text>|</text>
                    @Html.ActionLink("View ScoreCard", "DetailsScoreCard", new {id = item.GCID}) 
                    @*@Html.ActionLink("View Map", "ViewMap", new { id = item.GCID })*@
                }
            </td>
        </tr>
    }


</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))